<%- include('../layout/adminHeader.ejs') %>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<div class="d-flex justify-content-center" style="min-height: 100vh;">
  <div style="min-height: 100vh;">

    <div class="container col-lg-6">
      <div class="row">
        <div class="d-flex justify-content-center p-5">
          <h1 class="fw-bold"><u>ADD PRODUCT</u></h1>
        </div>
        <form method="post" id="catForm" enctype="multipart/form-data" action="">

          <div class="form-group">
            <label for="productName">Product Name</label>
            <input name="product_name" type="text" class="form-control border border-dark" id="productName"
              placeholder="Product Name" onblur="validateCatName()" required>
            <span id="catNameValidationMessage" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label for="productPrice">Product Price</label>
            <input name="product_price" type="number" class="form-control border border-dark" id="productPrice"
              placeholder="Product Price" onblur="validatePrice()" required>
            <span id="productPriceValidationMessage" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label for="productStock">Product Stock</label>
            <input name="product_stock" type="number" class="form-control border border-dark" id="productStock"
              placeholder="Product Stock" onblur="validateStock()" required>
            <span id="productStockValidationMessage" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label for="productDescription">Description</label>
            <textarea name="product_description" onblur="validateDescription()"
              class="form-control border border-dark" id="productDescription" placeholder="Product Description"
              rows="3" required></textarea>
            <span id="descriptionValidationMessage" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label for="productCategory">Category</label>
            <select id="productCategory" class="form-control border border-dark" name="product_category" onblur="validateCategory()" required>
              <option value="" disabled selected>Select a category</option>
              <% category.forEach(function(category) { %>
              <option value="<%= category._id %>"><%= category.name %></option>
              <% }); %>
            </select>
            <span id="categoryValidationMessage" class="text-danger"></span>
          </div>
          
          <div id="loadingSpinner" class="spinner-border text-primary" style="display: none;" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <div class="form-group">
            <label for="imageInput">Product Image</label>
            <input type="file" name="product_image" class="form-control border border-dark" id="imageInput"
              accept="image/*" onchange="validateImage()" multiple required>
            <span id="imageValidationMessage" class="text-danger"></span>
          </div>

          <div class="form-group py-3">
            <input type="submit" class="btn btn-primary form-control border border-dark" onclick="return submitForm()"
              id="exampleFormControlInput1">
          </div>

        </form>
      </div>
    </div>
  </div>
</div>

<script>
  const categoryNameInput = document.getElementById('productName');
  const productPriceInput = document.getElementById('productPrice');
  const productStockInput = document.getElementById('productStock');
  const descriptionInput = document.getElementById('productDescription');
  const imageInput = document.getElementById('imageInput');

  function submitForm() {
    event.preventDefault();
    const isValidateCatName = validateCatName();
    const isValidatePrice = validatePrice();
    const isValidateStock = validateStock();
    const isValidateDescription = validateDescription();
    const isValidateImage = validateImage();
    const isValidateCategory = validateCategory();

    if (isValidateCatName && isValidatePrice && isValidateStock && isValidateDescription && isValidateImage && isValidateCategory) {
  const catForm = document.getElementById('catForm');
  const formData = new FormData(catForm);

      fetch('/admin/add-product', {
        method: 'POST',
        body: formData,
      })
        .then(response => response.json())
        .then(data => {
          if (data.error) {

              console.log('Product already exists');
              Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'Product already exists',
                })
            } else if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'The Product is added',
                }).then(() => {
                    window.location.href = '/admin/add-product';
                });
            }
          })
        .catch(error => {
          console.error('Error:', error);
        });
    } else {
      return false;
    }

  }

  function validateCatName() {
  const categoryNameInput = document.getElementById('productName');
  const productName = categoryNameInput.value.trim();
  const nameRegex = /^[a-zA-Z0-9]+(?: [a-zA-Z0-9]+)*$/;

  if (productName.length < 3) {
    showValidationMessage('catNameValidationMessage', 'Please use at least 3 characters.');
    return false;
  } else if (productName.length > 15) {
    showValidationMessage('catNameValidationMessage', 'Please use at most 15 characters.');
    return false;
  } else if (!nameRegex.test(productName)) {
    showValidationMessage('catNameValidationMessage', 'Only spaces between characters and numbers are allowed.');
    return false;
  } else {
    hideValidationMessage('catNameValidationMessage');
    return true;
  }
}

  function validatePrice() {
    const productPrice = productPriceInput.value.trim();

    if (productPrice.length === 0) {
        showValidationMessage('productPriceValidationMessage', 'Product price is required.');
        return false;

      } else if (isNaN(productPrice) || parseFloat(productPrice) <= 0) {
        showValidationMessage('productPriceValidationMessage', 'Please enter a valid product price.');
        return false;
      } else {
      hideValidationMessage('productPriceValidationMessage');
      return true;
    }
  }

  function validateStock() {
    const productStock = productStockInput.value.trim();

    if (productStock.length === 0) {
        showValidationMessage('productStockValidationMessage', 'Product count is required.');
        return false;

      } else if (isNaN(productStock) || parseInt(productStock) < 0) {
        showValidationMessage('productStockValidationMessage', 'Please enter a valid number.');
        return false;
      } else {
      hideValidationMessage('productStockValidationMessage');
      return true;
    }
  }

  function validateDescription() {
    const description = descriptionInput.value.trim();

    if (description.length === 0) {
      showValidationMessage('descriptionValidationMessage', 'Please provide a description.');
      return false;
    } else if (description.length > 250) {
      showValidationMessage('descriptionValidationMessage', 'Description should not exceed 250 characters.');
      return false;
    } else {
      hideValidationMessage('descriptionValidationMessage');
      return true;
    }
  }

  function validateImage() {
    const allowedFileTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
    const imageValidationMessage = document.getElementById('imageValidationMessage');

    if (!imageInput.files || imageInput.files.length === 0) {
        showValidationMessage('imageValidationMessage', 'Please select an image.');
        return false;
    }

    const fileType = imageInput.files[0].type;

    if (!allowedFileTypes.includes(fileType) && !imageInput.files[0].name.toLowerCase().endsWith('.webp')) {
        showValidationMessage('imageValidationMessage', 'Invalid file type. Please select a valid image (JPEG, PNG, GIF, WebP).');
        return false;
    }

    hideValidationMessage('imageValidationMessage');
    return true;
  }


  function validateCategory() {
    const categorySelect = document.getElementById('productCategory');
    const selectedCategory = categorySelect.value;

    if (selectedCategory === "") {
        showValidationMessage('categoryValidationMessage', 'Please select a category.');
        return false;
    } else {
        hideValidationMessage('categoryValidationMessage');
        return true;
    }
  }

  function showValidationMessage(elementId, message) {
    const validationMessage = document.getElementById(elementId);
    validationMessage.innerText = message;
    validationMessage.style.color = 'red';
  }

  function hideValidationMessage(elementId) {
    const validationMessage = document.getElementById(elementId);
    validationMessage.innerText = '';
  }
</script>

<%- include('../layout/adminFooter.ejs') %>
